{"version":3,"sources":["App.js","index.js"],"names":["App","oldData","JSON","parse","localStorage","getItem","useState","list","setList","currentSurah","setCurrentSurah","currentAayahNo","setCurrentAayahNo","versesList","setVersesList","aayah","setAayah","totalAayahsRead","setTotalAayahs","useEffect","fetch","then","response","json","data","length","verses","className","id","parseFloat","toFixed","class","onChange","event","e","target","options","selectedIndex","value","map","item","index","transliteration","text","slice","onClick","total","i","total_verses","currentAayah","percentage","setItem","stringify","saveData","rootElement","document","getElementById","createRoot","render"],"mappings":"mLAGe,SAASA,IACtB,IAAMC,EAAUC,KAAKC,MAAMC,aAAaC,QAAQ,YAEhD,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwCF,mBACtCL,EAAUA,EAAQQ,aAAe,GADnC,mBAAOA,EAAP,KAAqBC,EAArB,KAGA,EAA4CJ,mBAC1CL,EAAUA,EAAQU,eAAiB,GADrC,mBAAOA,EAAP,KAAuBC,EAAvB,KAGA,EAAoCN,mBAAS,IAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAA0BR,mBAAS,IAAnC,mBAAOS,EAAP,KAAcC,EAAd,KACA,EAA0CV,mBAAS,GAAnD,mBAAOW,EAAP,KAAwBC,EAAxB,KAEAC,qBAAU,WACRC,MAAM,iEACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLhB,EAAQgB,QAEX,IAEHL,qBAAU,WACRL,EACEL,GAAgBF,EAAKkB,OAAS,EAAIlB,EAAKE,EAAe,GAAGiB,OAAS,IAEpER,EAAejB,EAAUA,EAAQgB,gBAAkB,KAClDV,GAwCH,OACE,sBAAKoB,UAAU,MAAf,UACE,+CACA,gCACE,6BACGV,EAAkB,EACf,+BACA,yEAEN,wBAAOW,GAAG,WAAV,UACE,+BACE,0CACA,+CAEF,+BACE,oDACA,6BAAKX,OAEP,+BACE,gEACA,+BAAKY,WAAYZ,EAAkB,KAAQ,KAAKa,QAAQ,GAAxD,UAEF,+BACE,6CACA,+BACG,KAAOb,EADV,YACoC,KACjCY,YAAa,KAAOZ,GAAmB,KAAQ,KAAKa,QAAQ,GAF/D,gBAON,4CACA,sBAAKC,MAAM,MAAX,UACE,yBACEC,SAAU,SAACC,GAAD,OAxEKC,EAyECD,EAAME,OAAOC,QAAQC,cAxE3C3B,EAAgBwB,QACN,IAANA,GACFpB,EAAcP,EAAK2B,EAAI,GAAGR,QAC1Bd,EAAkB,GAClBI,EAAS,MAETN,EAAgB,GAChBI,EAAc,IACdE,EAAS,MATS,IAACkB,GAuEjB,UAKE,wBAAgBI,MAAO,KAAvB,uCAAY,KAGX/B,EAAKgC,KAAI,SAACC,EAAMC,GACf,OACE,yBAAsBH,MAAOE,EAAKd,OAAlC,UACGe,EAAQ,EADX,KACgBD,EAAKE,kBADRF,EAAKZ,UAOxB,4CACA,yBACEI,SAAU,SAACC,GAAD,OA7EKC,EA8ECD,EAAME,OAAOC,QAAQC,cA7E3CzB,EAAkBsB,QAEhBlB,EADQ,IAANkB,EACOrB,EAAWqB,EAAI,GAAGS,KAElB,IALS,IAACT,GA4EjB,UAKE,wBAAgBI,MAAO,KAAvB,wCAAY,KAGXzB,EAAW0B,KAAI,SAACC,EAAMC,GACrB,OACE,mCACGD,EAAKG,KAAKC,MAAM,EAAG,IADtB,OAC+BH,EAAQ,IAD1BA,YAOrB,6BAAK1B,IACL,wBAAQY,UAAU,SAASkB,QAAS,kBArFvB,WAEf,IADA,IAAIC,EAAQ,EACHC,EAAI,EAAGA,EAAItC,EAAcsC,IAChCD,GAAgBvC,EAAKwC,GAAGC,aAE1B9B,EAAe4B,GACf,IAAItB,EAAO,CACTP,gBAAiB6B,EACjBrC,aAAcA,EACdE,eAAgBA,EAChBsC,aAAclC,EACdmC,WAAYrB,WAAYZ,EAAkB,KAAQ,KAAKa,QAAQ,IAEjE1B,aAAa+C,QAAQ,UAAWjD,KAAKkD,UAAU5B,IAwEH6B,IAA1C,qBCtIN,IAAMC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAAC1D,EAAD,S","file":"static/js/main.3a12f976.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nexport default function App() {\r\n  const oldData = JSON.parse(localStorage.getItem(\"oldData\"));\r\n\r\n  const [list, setList] = useState([]);\r\n  const [currentSurah, setCurrentSurah] = useState(\r\n    oldData ? oldData.currentSurah : 0\r\n  );\r\n  const [currentAayahNo, setCurrentAayahNo] = useState(\r\n    oldData ? oldData.currentAayahNo : 0\r\n  );\r\n  const [versesList, setVersesList] = useState([]);\r\n  const [aayah, setAayah] = useState(\"\");\r\n  const [totalAayahsRead, setTotalAayahs] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://cdn.jsdelivr.net/npm/quran-json@3.1.2/dist/quran.json\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setList(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setVersesList(\r\n      currentSurah && list.length > 0 ? list[currentSurah - 1].verses : []\r\n    );\r\n    setTotalAayahs(oldData ? oldData.totalAayahsRead : 0);\r\n  }, list);\r\n\r\n  const surahSelected = (e) => {\r\n    setCurrentSurah(e);\r\n    if (e !== 0) {\r\n      setVersesList(list[e - 1].verses);\r\n      setCurrentAayahNo(0);\r\n      setAayah(\"\");\r\n    } else {\r\n      setCurrentSurah(0);\r\n      setVersesList([]);\r\n      setAayah(\"\");\r\n    }\r\n  };\r\n\r\n  const aayahSelected = (e) => {\r\n    setCurrentAayahNo(e);\r\n    if (e !== 0) {\r\n      setAayah(versesList[e - 1].text);\r\n    } else {\r\n      setAayah(\"\");\r\n    }\r\n  };\r\n\r\n  const saveData = () => {\r\n    let total = 0;\r\n    for (let i = 0; i < currentSurah; i++) {\r\n      total = total + list[i].total_verses;\r\n    }\r\n    setTotalAayahs(total);\r\n    let data = {\r\n      totalAayahsRead: total,\r\n      currentSurah: currentSurah,\r\n      currentAayahNo: currentAayahNo,\r\n      currentAayah: aayah,\r\n      percentage: parseFloat((totalAayahsRead / 6666) * 100).toFixed(2)\r\n    };\r\n    localStorage.setItem(\"oldData\", JSON.stringify(data));\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Quran Tracker</h1>\r\n      <div>\r\n        <h2>\r\n          {totalAayahsRead > 0\r\n            ? \"Salam! Your progress so far:\"\r\n            : \"Salam! Select your last read Surah and aayah and save your progress!\"}\r\n        </h2>\r\n        <table id=\"progress\">\r\n          <tr>\r\n            <th>Category</th>\r\n            <th>Statistics</th>\r\n          </tr>\r\n          <tr>\r\n            <td>Total Aayahs Read:</td>\r\n            <td>{totalAayahsRead}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Percentage of Quran Completed:</td>\r\n            <td>{parseFloat((totalAayahsRead / 6666) * 100).toFixed(2)}%</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Quran Left:</td>\r\n            <td>\r\n              {6666 - totalAayahsRead} Aayahs |{\"  \"}\r\n              {parseFloat(((6666 - totalAayahsRead) / 6666) * 100).toFixed(2)}%\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n      <h2>Surah List</h2>\r\n      <div class=\"box\">\r\n        <select\r\n          onChange={(event) =>\r\n            surahSelected(event.target.options.selectedIndex)\r\n          }\r\n        >\r\n          <option key=\"0\" value={null}>\r\n            -- Select Current Surah --\r\n          </option>\r\n          {list.map((item, index) => {\r\n            return (\r\n              <option key={item.id} value={item.verses}>\r\n                {index + 1}. {item.transliteration}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n\r\n        <h2>Aayah List</h2>\r\n        <select\r\n          onChange={(event) =>\r\n            aayahSelected(event.target.options.selectedIndex)\r\n          }\r\n        >\r\n          <option key=\"0\" value={null}>\r\n            -- Select Last Read Aayah--\r\n          </option>\r\n          {versesList.map((item, index) => {\r\n            return (\r\n              <option key={index}>\r\n                {item.text.slice(0, 15)}... {index + 1}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      </div>\r\n      <h2>{aayah}</h2>\r\n      <button className=\"button\" onClick={() => saveData()}>\r\n        Save\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nconst root = createRoot(rootElement);\r\n\r\nroot.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>\r\n);\r\n"],"sourceRoot":""}